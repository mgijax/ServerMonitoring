<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2013, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	template="/WEB-INF/templates/default2.xhtml">
	<ui:define name="content">
		<h1>Welcome to Server Monitor</h1>

		<h2>Server List</h2>
		<h:panelGroup rendered="#{empty servers}">
			<em>No Servers to Display.</em>
		</h:panelGroup>

		<h:dataTable var="server" value="#{servers}"
			rendered="#{not empty servers}" styleClass="simpletablestyle">
			<h:column>
				<f:facet name="header">Id</f:facet>
                #{server.id}
            </h:column>
			<h:column>
				<f:facet name="header">Name</f:facet>
				<h:outputLink value="server.jsf">
					<f:param name="serverName" value="#{server.name}" />
					<h:outputText value="#{server.name}" />
				</h:outputLink>
			</h:column>
			<h:column>
				<f:facet name="header">Last Updated</f:facet>
				<span id="#{server.name}_lastupdated"></span>
			</h:column>
			<h:column>
				<f:facet name="header">System Load</f:facet>
				<div id="#{server.name}_graph_div" style="width: 800px; height: 60px;"></div>
				
			</h:column>
		</h:dataTable>

		<script type="text/javascript">
	
			var n = 720;
			var data = [];
			var chart = [];
			var options = [];
	
			google.load('visualization', '1.1', {packages: ['corechart', 'line']});
			google.setOnLoadCallback(setupCharts);

			function setupCharts() {
				<ui:repeat var="serverName" value="#{servers}">
					updateChartDataOptions("#{serverName.name}", "System", "Load", "5min");
				</ui:repeat>
			}
		</script>
	
			


		<script type="text/javascript">
        /* <![CDATA[ */
        
	        function updateChartDataOptions(servername, type, name, property) {
	
				data[servername] = new google.visualization.DataTable();
				data[servername].addColumn("datetime", "Time");
				data[servername].addColumn("number", name);
				options[servername] = { hAxis: { title: 'Time' }, vAxis: { title: property} };
				chart[servername] = new google.visualization.LineChart(document.getElementById(servername + "_graph_div"));
				chart[servername].draw(data[servername], options[servername]);
	
				$.ajax({
					type: "POST",
					url: "http://" + window.location.host + "/rest/datapoint/list?amount=" + n,
					dataType: "json",
					contentType: "application/json",
					success: function(jsondata) {
						jsondata.reverse();
						for(var i = 0; i < jsondata.length; i++) {
							data[servername].addRow([new Date(jsondata[i].dataTimeStamp * 1), jsondata[i].dataValue * 1]);
						}
						chart[servername].draw(data[servername], options[servername]);
					},
					data: '{"serverName": "' + servername + '", "dataName": "' + name + '", "dataType": "' + type + '", "dataProperty": "' + property + '"}'
				});
			}


			function WebSocketTest() {
				if ("WebSocket" in window) {
					var url = 'ws://' + window.location.host + '/websocket';
					console.log(url);
					var ws = new WebSocket(url);
					
					ws.onopen = function()  {
						console.log("Connection Opened");
						ws.send("all");
					};

					ws.onmessage = function (evt) { 
						if(evt.data == "session opened") return;
						var msg = JSON.parse(evt.data);
						//console.log(msg);
						
						document.getElementById(msg.serverName + "_lastupdated").innerHTML = new Date(msg.dataTimeStamp * 1);
						if(msg.dataType == 'System' && msg.dataName == 'Load' && msg.dataProperty == '5min') {
							if(data[msg.serverName].getNumberOfRows() > 0) {
								data[msg.serverName].addRow([new Date(msg.dataTimeStamp * 1), msg.dataValue * 1]);
							}
							while(data[msg.serverName].getNumberOfRows() > n) data[msg.serverName].removeRow(0);
							chart[msg.serverName].draw(data[msg.serverName], options[msg.serverName]);
						}
					};

					ws.onclose = function (evt) {
						console.log("Connection Closed");
					};

				} else {
					alert("WebSocket NOT supported by your Browser!");
				}
			}
			window.addEventListener("load", WebSocketTest, false);
		/* ]]> */
		</script>
	</ui:define>

	<ui:define name="footer">
		<p></p>
	</ui:define>
</ui:composition>